name: Docker Build

on:
  workflow_run:
    workflows: ['Release']
    branches: [main]
    types:
      - completed

permissions:
  contents: read
  packages: write

jobs:
  type-check:
    name: Check Types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Dependancies
        run: yarn install
      - name: Generate
        run: yarn generate
      - name: Build
        run: yarn tsc --noEmit
  docker-build:
    runs-on: ubuntu-latest
    needs: 'type-check'
    name: 'Build and Publish Image'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/dynamicabot/dynamica-v2
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        id: docker_build
        with:
          context: .
          target: 'runner'
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ github.event.release.tag_name }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   environment: 'Production'
  #   needs: 'docker-build'
  #   name: 'Deploy Image'
  #   defaults:
  #     run:
  #       working-directory: deploy

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.x'
  #         cache: 'pip'
  #     - name: Tailscale
  #       uses: tailscale/github-action@main
  #       with:
  #         authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
  #     - name: Create Inventory
  #       run: echo $ANSIBLE_INVENTORY >> inventory
  #       env:
  #         ANSIBLE_INVENTORY: ${{ secrets.ANSIBLE_INVENTORY }}
  #     - name: Install SSH key
  #       uses: shimataro/ssh-key-action@v2
  #       with:
  #         key: ${{ secrets.SSH_KEY }}
  #         known_hosts: ${{ secrets.KNOWN_HOSTS }}
  #     - name: Install Dependancies
  #       run: pip install -r requirements.txt
  #     - name: Install Docker Galaxy
  #       run: ansible-galaxy collection install community.docker
  #     - name: Deploy
  #       run: ansible-playbook ansible-deploy.yaml
  #       env:
  #         TOKEN: ${{ secrets.TOKEN }}
  #         CLIENT_ID: ${{ secrets.CLIENT_ID }}
  #         VERSION: ${{ github.event.release.tag_name }}
  #         MQTT_URL: ${{ secrets.MQTT_URL }}
  #         MQTT_USER: ${{ secrets.MQTT_USER }}
  #         MQTT_PASS: ${{ secrets.MQTT_PASS }}
  docker-build-pterodactyl:
    runs-on: ubuntu-latest
    needs: 'type-check'
    name: 'Build and Publish Image (Pterodactyl)'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/dynamicabot/dynamica-v2
          flavor: |
            suffix=-pterodactyl,onlatest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        id: docker_build
        with:
          context: .
          target: 'pterodactyl'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            VERSION=${{ github.event.release.tag_name }}
